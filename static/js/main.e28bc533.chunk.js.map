{"version":3,"sources":["components/KruskalComponent/KruskalComponent.module.css","components/PrimComponent/PrimComponent.module.css","layout/MainLayout.module.css","components/KruskalComponent/set.js","components/KruskalComponent/index.js","components/PrimComponent/index.js","routes/routes.js","assets/images/ucg-logo.png","layout/MainLayout.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","kruskalSet","make","lines","line","items","parent","value","find","p","Error","union","line1","line2","first","second","this","minimalEdge","edges","min","item","Option","Select","mainRoutes","title","path","icon","HomeOutlined","style","fontSize","component","textAlign","DotChartOutlined","props","useState","positions","setPositions","numOfNodes","setNumOfNodes","startingNode","setStartingNode","disabled","setDisabled","drawLines","setDrawLines","setLines","Form","useForm","form","calculateDistances","node","left","top","index","map","el","elLeft","Math","abs","elTop","distance","sqrt","pow","filter","generateLine","points","stroke","strokeWidth","lineCap","lineJoin","justify","width","span","display","justifyContent","layout","size","Item","label","name","initialValue","max","onChange","val","defaultValue","onSelect","arrOfElems","i","push","renderOptions","type","onClick","newArr","newLines","arrOfShortestDistances","length","distances","console","log","startingNodeEl","shortestDistance","filteredEl","from","to","positionsLeft","includes","onlyDistances","forEach","pos","dist","checkIfIncludesDistance","pos1","pos2","notification","open","duration","message","description","marginTop","color","parseInt","setFieldsValue","nodes","starting","danger","DeleteOutlined","marginLeft","height","e","evt","offsetX","offsetY","warning","className","styles","canvasWrapper","x","y","text","RadarChartOutlined","distancesSorted","sort","a","b","kruskalResult","finalArr","edgesCopy","slice","set1","splice","indexOf","getMst","arr","circles","elem","Header","Layout","Content","Footer","Sider","MainLayout","siderCollapsed","setSiderCollapsed","minHeight","collapsible","collapsedWidth","zeroWidthTriggerStyle","position","backgroundColor","collapsed","trigger","siderLogoWrapper","src","ucgLogo","alt","theme","mode","route","padding","cursor","MenuUnfoldOutlined","margin","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,cAAgB,0C,oBCAhGD,EAAOC,QAAU,CAAC,iBAAmB,wCAAwC,cAAgB,uC,oBCA7FD,EAAOC,QAAU,CAAC,iBAAmB,uC,oUCgCxBC,EAAa,IAhCxB,aAAe,IAAD,gCAGdC,KAAO,SAACC,GAAW,IAAD,gBACGA,GADH,IAChB,2BAA0B,CAAC,IAAhBC,EAAe,QACxB,EAAKC,MAAMD,GAAQ,CACjBE,OAAQ,KACRC,MAAOH,IAJK,gCAHJ,KAWdI,KAAO,SAACJ,GACN,IAAIK,EAAI,EAAKJ,MAAMD,GACnB,GAAIK,EACF,OAAoB,OAAbA,EAAEH,OAAkBG,EAAI,EAAKD,KAAKC,EAAEH,OAAOC,OAEpD,MAAM,IAAIG,MAAM,kBAhBJ,KAkBdC,MAAQ,SAACC,EAAOC,GACd,IAAMC,EAAQ,EAAKN,KAAKI,GAClBG,EAAS,EAAKP,KAAKK,GACzB,GAAc,OAAVC,GAA6B,OAAXC,EACpB,MAAM,IAAIL,MAAM,iBAElB,OAAII,IAAUC,IACZD,EAAMR,OAASS,GACR,IAzBTC,KAAKX,MAAQ,I,OCeXY,EAAc,SAACC,GACnB,IAD6B,EACzBC,EAAM,KADmB,cAEVD,GAFU,IAE7B,2BAA0B,CAAC,IAAhBE,EAAe,QACxBD,EAAMA,EAAOC,EAAK,GAAKD,EAAI,GAAKC,EAAOD,EAAOC,GAHnB,8BAK7B,OAAOD,G,2BCLDE,EAAWC,IAAXD,OCLKE,EAAa,CACxB,CACEC,MAAO,eACPC,KAAM,IACNC,KAAM,cAACC,EAAA,EAAD,CAAcC,MAAO,CAAEC,SAAU,YACvCC,UAAW,kBACT,sBAAKF,MAAO,CAAEC,SAAU,OAAQE,UAAW,UAA3C,2BAEE,mBAAGH,MAAO,CAAEC,SAAU,QAAtB,+CAIN,CACEL,MAAO,mBACPC,KAAM,UACNC,KAAM,cAACM,EAAA,EAAD,CAAkBJ,MAAO,CAAEC,SAAU,YAC3CC,UDTyB,SAACG,GAC5B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,mBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAA0BV,mBAAS,IAAnC,mBAAO/B,EAAP,KAAc0C,EAAd,KACA,EAAeC,IAAKC,UAAbC,EAAP,oBAEMC,EAAqB,SAACC,GAC1B,IAAQC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,IAAKC,EAAUH,EAAVG,MAuBnB,OAtBgBlB,EACbmB,KAAI,SAACC,GACJ,GAAIA,EAAGF,QAAUA,EAAO,CACtB,IAAIG,EAASC,KAAKC,IAAIP,EAAOI,EAAGJ,MAC5BQ,EAAQF,KAAKC,IAAIN,EAAMG,EAAGH,KAC9B,OAAe,IAAXI,EACK,CAAEH,MAAOE,EAAGF,MAAOO,SAAUH,KAAKI,KAAKJ,KAAKK,IAAIH,EAAO,KAC7C,IAAVA,EACA,CACLN,MAAOE,EAAGF,MACVO,SAAUH,KAAKI,KAAKJ,KAAKK,IAAIN,EAAQ,KAGhC,CACLH,MAAOE,EAAGF,MACVO,SAAUH,KAAKI,KAAKJ,KAAKK,IAAIH,EAAO,GAAKF,KAAKK,IAAIN,EAAQ,KAG9D,OAAO,QAGVO,QAAO,SAACR,GAAD,QAAUA,MAIhBS,EAAe,SAAClD,EAAOC,GAC3B,OACE,cAAC,IAAD,CACEkD,OAAQ,CAACnD,EAAMqC,KAAMrC,EAAMsC,IAAKrC,EAAOoC,KAAMpC,EAAOqC,KACpDc,OAAO,MACPC,YAAa,EACbC,QAAQ,QACRC,SAAS,WA2Hf,OACE,gCACE,cAAC,IAAD,+BACA,cAAC,IAAD,CAAKC,QAAQ,SAAS1C,MAAO,CAAE2C,MAAO,QAAtC,SACE,cAAC,IAAD,CAAKC,KAAM,GAAI5C,MAAO,CAAE6C,QAAS,OAAQC,eAAgB,UAAzD,SACE,eAAC,IAAD,CAAMC,OAAQ,SAAUC,KAAK,QAAQ5B,KAAMA,EAA3C,UACE,cAAC,IAAK6B,KAAN,CACEC,MAAM,4BACNC,KAAK,QACLC,aAAc,EAHhB,SAKE,cAAC,IAAD,CACE7D,IAAK,EACL8D,IAAK,GACLC,SAAU,SAACC,GAAD,OAAS7C,EAAc6C,IACjC1C,SAAUA,MAGd,cAAC,IAAKoC,KAAN,CACEC,MAAM,8BACNC,KAAK,WACLC,aAAc,EAHhB,SAKE,cAAC,IAAD,CACEI,aAAc,EACdxD,MAAO,CAAE2C,MAAO,KAChBc,SAAU,SAACF,GAAD,OAAS3C,EAAgB2C,IACnC1C,SAAUA,EAJZ,SAjCU,WAGpB,IAFA,IAAI6C,EAAa,GACbC,EAAI,EACDA,EAAIlD,GACTiD,EAAWE,KAAK,cAACnE,EAAD,CAAQd,MAAOgF,EAAf,SAAmBA,KACnCA,IAEF,OAAOD,EAgCMG,OAGL,cAAC,IAAD,CAAQb,KAAK,QAAQc,KAAK,UAAUC,QA5I9B,WACdjD,GAAY,GAKZ,IAJA,IAAIkD,EAAS,GACTC,EAAW,GACXC,EAAyB,GACzBrE,EAAO,GACJmE,EAAOG,OAAS1D,GACC,IAAlBuD,EAAOG,OAAe,WACxB3D,EACED,EAAUmB,KAAI,SAACC,GAEb,OADAA,EAAGyC,UAAY/C,EAAmBM,GAC3BA,MAGX0C,QAAQC,IAAI/D,EAAW,OACvB,IAAIgE,EAAiBhE,EAAUI,GAC3B6D,EAAmB3C,KAAKtC,IAAL,MAAAsC,KAAI,YACtB0C,EAAeH,UAAU1C,KAAI,SAACC,GAAD,OAAQA,EAAGK,cAE7CkC,EAAuBN,KAAKY,GAC5BH,QAAQC,IAAIJ,GACZG,QAAQC,IAAIC,EAAgB,UAAWC,EAAkB,YACzD,IAAIC,EAAalE,EAAU4B,QACzB,SAACR,GAAD,OACEA,EAAGF,QACH8C,EAAeH,UAAUjC,QACvB,SAACR,GAAD,OAAQA,EAAGK,WAAawC,KACxB,GAAG/C,SACP,GACF4C,QAAQC,IAAIG,EAAY,YACxBT,EAAS,CAACO,EAAe9C,MAAOgD,EAAWhD,OAC3C5B,EAAK+D,KAAK,CACRc,KAAMH,EAAe9C,MACrBkD,GAAIF,EAAWhD,MACfO,SAAUwC,IAEZP,EAASL,KAAKxB,EAAamC,EAAgBE,IA7BnB,GA8BlB,WACNJ,QAAQC,IAAIN,EAAQ,oBACpB,IAAIY,EAAgBrE,EACjBmB,KAAI,SAACC,GACJ,GAAIqC,EAAOa,SAASlD,EAAGF,OAAQ,OAAOE,KAEvCQ,QAAO,SAACR,GAAD,QAAUA,KACpB0C,QAAQC,IAAIM,GACZP,QAAQC,IAAIJ,GACZ,IAAIY,EAAgB,GACpBF,EAAcG,SAAQ,SAACC,GACrBA,EAAIZ,UAAUW,SAAQ,SAACE,GAElBf,EAAuBW,SAASI,EAAKjD,WACrCgC,EAAOa,SAASI,EAAKxD,QAEtBqD,EAAclB,KAAKqB,EAAKjD,gBAG9BqC,QAAQC,IAAIQ,GAEZ,IAAIN,EAAmB3C,KAAKtC,IAAL,MAAAsC,KAAYiD,GACnCZ,EAAuBN,KAAKY,GAC5BI,EAAcG,SAAQ,SAACC,GACrB,IAAIE,EAA0BF,EAAIZ,UAAUjC,QAC1C,SAAC8C,GAAD,OAAUA,EAAKjD,WAAawC,KAE9B,GAAIU,EAAwBf,OAAQ,CAClCH,EAAOJ,KAAKsB,EAAwB,GAAGzD,OACvC,IAAI0D,EAAO5E,EAAU4B,QAAO,SAACR,GAAD,OAAQA,EAAGF,QAAUuD,EAAIvD,SAAO,GACxD2D,EAAO7E,EAAU4B,QACnB,SAACR,GAAD,OAAQA,EAAGF,QAAUyD,EAAwB,GAAGzD,SAChD,GACF5B,EAAK+D,KAAK,CACRe,GAAIS,EAAK3D,MACTiD,KAAMS,EAAK1D,MACXO,SAAUwC,IAEZP,EAASL,KAAKxB,EAAa+C,EAAMC,QAtC/B,GA2CVnE,EAASgD,GACTjD,GAAa,GACbqD,QAAQC,IAAIzE,EAAM,QAClBwF,IAAaC,KAAK,CAChBC,SAAU,EACVC,QAAS,WACTC,YACE,cAAC,IAAD,CAAUzF,MAAO,CAAE0F,UAAW,QAA9B,SACG7F,EAAK6B,KAAI,SAACC,GAAD,OACR,cAAC,IAASsB,KAAV,CAAe0C,MAAM,MAArB,mBAA+BhE,EAAG+C,KAAlC,mBACE/C,EAAGgD,GADL,8BAEiBiB,SAASjE,EAAGK,UAF7B,gBAmDA,8BAGA,cAAC,IAAD,CACE8B,KAAK,UACLC,QA3JQ,WAClB3C,EAAKyE,eAAe,CAAEC,MAAO,EAAGC,SAAU,IAC1CvF,EAAa,IACbE,EAAc,GACdE,EAAgB,GAChBE,GAAY,GACZE,GAAa,GACbC,EAAS,KAqJC+E,QAAM,EACNlG,KAAM,cAACmG,EAAA,EAAD,IACNjG,MAAO,CAAEkG,WAAY,iBAK7B,cAAC,IAAD,CACEvD,MAAO,IACPwD,OAAQ,IACRpC,QAAS,SAACqC,GAAD,OACP7F,EAAU4D,OAAS1D,EACfD,EAAa,GAAD,mBACPD,GADO,CAEV,CACEgB,KAAM6E,EAAEC,IAAIC,QACZ9E,IAAK4E,EAAEC,IAAIE,QACX9E,MAAOlB,EAAU4D,WAGrBqB,IAAQgB,QAAQ,8CAEtBC,UAAWC,IAAOC,cAfpB,SAiBE,eAAC,IAAD,WACGpG,EAAU4D,OACT5D,EAAUmB,KAAI,SAACC,EAAIF,GAAL,OACZ,qCACE,cAAC,IAAD,CAEEmF,EAAGjF,EAAGJ,KACNsF,EAAGlF,EAAGH,IACNmB,MAAO,GACPwD,OAAQ,GACR7D,OAAO,QACPC,YAAa,GANRd,GAQP,cAAC,IAAD,CACExB,SAAU,GACV2G,EAAGjF,EAAGJ,KAAO,EACbsF,EAAGlF,EAAGH,IAAM,GACZsF,KAAMnF,EAAGF,cAKf,cAAC,IAAD,CAAMqF,KAAK,yCAAoCF,EAAG,GAAIC,EAAG,KAE1DtI,EAAM4F,QAAUpD,EAAYxC,EAAMmD,KAAI,SAACC,GAAD,OAAQA,KAAM,eCjP7D,CACE/B,MAAO,sBACPC,KAAM,aACNC,KAAM,cAACiH,EAAA,EAAD,CAAoB/G,MAAO,CAAEC,SAAU,YAC7CC,UFM4B,SAACG,GAC/B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAA0BV,mBAAS,IAAnC,mBAAO/B,EAAP,KAAc0C,EAAd,KACA,EAAeC,IAAKC,UAAbC,EAAP,oBAwHA,OACE,gCACE,cAAC,IAAD,kCACA,cAAC,IAAD,CAAKsB,QAAQ,SAAS1C,MAAO,CAAE2C,MAAO,QAAtC,SACE,cAAC,IAAD,CAAKC,KAAM,GAAI5C,MAAO,CAAE6C,QAAS,OAAQC,eAAgB,UAAzD,SACE,eAAC,IAAD,CAAMC,OAAQ,SAAUC,KAAK,QAAQ5B,KAAMA,EAA3C,UACE,cAAC,IAAK6B,KAAN,CACEC,MAAM,4BACNC,KAAK,QACLC,aAAc,EAHhB,SAKE,cAAC,IAAD,CACE7D,IAAK,EACL8D,IAAK,GACLC,SAAU,SAACC,GAAD,OAAS7C,EAAc6C,IACjC1C,SAAUA,MAGd,cAAC,IAAD,CAAQmC,KAAK,QAAQc,KAAK,UAAUC,QAxF9B,WACdjD,GAAY,GACZ,IAAIkG,EAAkB,GAIlB/C,EAAW,GACfzD,EACED,EAAUmB,KAAI,SAACC,GAEb,OADAA,EAAGyC,UAzDkB,SAAC9C,GAC1B,IAAQC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,IAAKC,EAAUH,EAAVG,MAuBnB,OAtBgBlB,EACbmB,KAAI,SAACC,GACJ,GAAIA,EAAGF,QAAUA,EAAO,CACtB,IAAIG,EAASC,KAAKC,IAAIP,EAAOI,EAAGJ,MAC5BQ,EAAQF,KAAKC,IAAIN,EAAMG,EAAGH,KAC9B,OAAe,IAAXI,EACK,CAAEH,MAAOE,EAAGF,MAAOO,SAAUH,KAAKI,KAAKJ,KAAKK,IAAIH,EAAO,KAC7C,IAAVA,EACA,CACLN,MAAOE,EAAGF,MACVO,SAAUH,KAAKI,KAAKJ,KAAKK,IAAIN,EAAQ,KAGhC,CACLH,MAAOE,EAAGF,MACVO,SAAUH,KAAKI,KAAKJ,KAAKK,IAAIH,EAAO,GAAKF,KAAKK,IAAIN,EAAQ,KAG9D,OAAO,QAGVO,QAAO,SAACR,GAAD,QAAUA,KAkCDN,CAAmBM,GAC3BA,MAGXpB,EAAUwE,SAAQ,SAACC,GACjBA,EAAIZ,UAAUW,SAAQ,SAACE,GAChB+B,EAAgBnC,SAAS,KAC5BmC,EAAgBpD,KAAK,CACnBc,KAAMM,EAAIvD,MACVkD,GAAIM,EAAKxD,MACTO,SAAUiD,EAAKjD,iBAIvBgF,EAAkBA,EACfC,MAAK,SAACC,EAAGC,GACR,OAAOD,EAAElF,SAAWmF,EAAEnF,YAEvBG,QAAO,SAACR,EAAIF,GAAL,OAAeA,EAAQ,IAAM,KACvC4C,QAAQC,IAAI0C,EAAiB,YAC7B,IAYII,EAhHO,SAAC9H,EAAOf,GACrB,IAAI8I,EAAW,GACXC,EAAYhI,EAAMiI,MAAM,GACxBC,EAAOnJ,EAEX,IADAmJ,EAAKlJ,KAAKC,GACH8I,EAASlD,OAAS5F,EAAM4F,OAAS,GAAG,CACzC,IAAI5E,EAAMF,EAAYiI,GAClBE,EAAKzI,MAAMR,EAAMgB,EAAI,IAAKhB,EAAMgB,EAAI,MACtC8H,EAASzD,KAAKrE,GAEhB+H,EAAUG,OAAOH,EAAUI,QAAQnI,GAAM,GAE3C,OAAO8H,EAoGeM,CAPR,WACV,IAAIC,EAAM,GAIV,OAHAZ,EAAgBjC,SAAQ,SAACE,GAAD,OACtB2C,EAAIhE,KAAK,CAACqB,EAAKP,KAAMO,EAAKN,GAAIM,EAAKjD,cAE9B4F,EAEkBtI,GAZb,WAEZ,IADA,IAAIsI,EAAM,GACDjE,EAAI,EAAGA,EAAIlD,EAAYkD,IAAKiE,EAAIhE,KAAKD,GAC9C,OAAOiE,EAS2BC,IACpCT,EAAcrC,SAAQ,SAACpD,GACrB,IAhEkBzC,EAAOC,EAgErBgG,EAAO5E,EAAU4B,QAAO,SAAC2F,GAAD,OAAUA,EAAKrG,QAAUE,EAAG,MAAI,GACxDyD,EAAO7E,EAAU4B,QAAO,SAAC2F,GAAD,OAAUA,EAAKrG,QAAUE,EAAG,MAAI,GAC5DsC,EAASL,MAlES1E,EAkESiG,EAlEFhG,EAkEQiG,EAhEjC,cAAC,IAAD,CACE/C,OAAQ,CAACnD,EAAMqC,KAAMrC,EAAMsC,IAAKrC,EAAOoC,KAAMpC,EAAOqC,KACpDc,OAAO,MACPC,YAAa,EACbC,QAAQ,QACRC,SAAS,eA6Db4B,QAAQC,IAAI8C,EAAe,QAC3B/C,QAAQC,IAAI/D,EAAW,OACvB8D,QAAQC,IAAI0C,EAAiB,UAC7B3C,QAAQC,IA9CG,GA8CO,QAClBD,QAAQC,IA9CG,GA8CO,QAClBD,QAAQC,IAjDY,GAiDO,SAC3BrD,EAASgD,GACTjD,GAAa,GACbqE,IAAaC,KAAK,CAChBC,SAAU,EACVC,QAAS,WACTC,YACE,cAAC,IAAD,CAAUzF,MAAO,CAAE0F,UAAW,QAA9B,SACG0B,EAAc1F,KAAI,SAACC,GAAD,OACjB,cAAC,IAASsB,KAAV,CAAe0C,MAAM,MAArB,mBAA+BhE,EAAG,GAAlC,mBACEA,EAAG,GADL,8BAEiBiE,SAASjE,EAAG,IAF7B,gBA2BA,8BAGA,cAAC,IAAD,CACEmC,KAAK,UACLC,QAtGQ,WAClB3C,EAAKyE,eAAe,CAAEC,MAAO,EAAGC,SAAU,IAC1CvF,EAAa,IACbE,EAAc,GACdI,GAAY,GACZE,GAAa,GACbC,EAAS,KAiGC+E,QAAM,EACNlG,KAAM,cAACmG,EAAA,EAAD,IACNjG,MAAO,CAAEkG,WAAY,iBAK7B,cAAC,IAAD,CACEvD,MAAO,IACPwD,OAAQ,IACRpC,QAAS,SAACqC,GAAD,OACP7F,EAAU4D,OAAS1D,EACfD,EAAa,GAAD,mBACPD,GADO,CAEV,CACEgB,KAAM6E,EAAEC,IAAIC,QACZ9E,IAAK4E,EAAEC,IAAIE,QACX9E,MAAOlB,EAAU4D,WAGrBqB,IAAQgB,QAAQ,mDAEtBC,UAAWC,IAAOC,cAfpB,SAiBE,eAAC,IAAD,WACGpG,EAAU4D,OACT5D,EAAUmB,KAAI,SAACC,EAAIF,GAAL,OACZ,qCACE,cAAC,IAAD,CAEEmF,EAAGjF,EAAGJ,KACNsF,EAAGlF,EAAGH,IACNmB,MAAO,GACPwD,OAAQ,GACR7D,OAAO,QACPC,YAAa,GANRd,GAQP,cAAC,IAAD,CACExB,SAAU,GACV2G,EAAGjF,EAAGJ,KAAO,EACbsF,EAAGlF,EAAGH,IAAM,GACZsF,KAAMnF,EAAGF,cAKf,cAAC,IAAD,CAAMqF,KAAK,yCAAoCF,EAAG,GAAIC,EAAG,KAE1DtI,EAAM4F,QAAUpD,EAAYxC,EAAMmD,KAAI,SAACC,GAAD,OAAQA,KAAM,gB,SG9OhD,MAA0B,qC,kBCQjCoG,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,QAASC,EAAkBF,IAAlBE,OAAQC,EAAUH,IAAVG,MAEpBC,EAAa,SAAC/H,GACzB,MAA4CC,oBAAS,GAArD,mBAAO+H,EAAP,KAAuBC,EAAvB,KAEA,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQtI,MAAO,CAAEuI,UAAW,SAA5B,UACE,eAACJ,EAAD,CACEK,aAAW,EACXC,eAAe,IACfC,sBAAuB,CACrBC,SAAU,WACVnH,IAAK,OACLD,KAAM,IACNqH,gBAAiB,eAEnB5I,MAAO,CAAE2I,SAAU,QAASxC,OAAQ,SACpC0C,UAAWR,EACXS,QAAS,KAXX,UAaE,qBAAKrC,UAAWC,IAAOqC,iBAAvB,SACE,qBAAKC,IAAKC,EAASC,IAAI,eAEzB,cAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,SAAxB,SACGzJ,EAAW+B,KAAI,SAAC2H,EAAO5H,GAAR,OACd,cAAC,IAAKwB,KAAN,CAEEnD,KAAMuJ,EAAMvJ,KACZiE,QAAS,kBAAMuE,GAAkB,IAHnC,SAKE,cAAC,IAAD,CAAM3D,GAAI0E,EAAMxJ,KAAhB,SAAuBwJ,EAAMzJ,SAJxB6B,WASb,eAAC,IAAD,WACE,cAACsG,EAAD,CACEtB,UAAU,oCACVzG,MAAO,CAAEsJ,QAAS,GAFpB,SAIE,qBACEtJ,MAAO,CACL2I,SAAU,WACVpH,KAAM,OACNoE,MAAO,QACP1F,SAAU,SACVsJ,OAAQ,WAEVxF,QAAS,kBAEHuE,GADJD,IATJ,SAcoB,cAACmB,EAAA,EAAD,QAGtB,cAACvB,EAAD,CAASjI,MAAO,CAAEyJ,OAAQ,eAA1B,SACE,qBACEhD,UAAU,yBACVzG,MAAO,CAAEsJ,QAAS,GAAIf,UAAW,KAFnC,SFtBH5I,EAAW+B,KAAI,SAAC2H,EAAO5H,GAAR,OACpB,cAAC,IAAD,CAAOiI,OAAK,EAAC7J,KAAMwJ,EAAMxJ,KAAMK,UAAWmJ,EAAMnJ,WAAgBuB,UE4B1D,cAACyG,EAAD,CAAQlI,MAAO,CAAEG,UAAW,UAA5B,yDClEKwJ,EAJH,WACV,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e28bc533.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"algorithmWrapper\":\"KruskalComponent_algorithmWrapper__2sfgF\",\"canvasWrapper\":\"KruskalComponent_canvasWrapper__2xMvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"algorithmWrapper\":\"PrimComponent_algorithmWrapper__1jhoY\",\"canvasWrapper\":\"PrimComponent_canvasWrapper__ALlYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siderLogoWrapper\":\"MainLayout_siderLogoWrapper__1Rm3i\"};","class Set {\r\n  constructor() {\r\n    this.items = {};\r\n  }\r\n  make = (lines) => {\r\n    for (const line of lines) {\r\n      this.items[line] = {\r\n        parent: null,\r\n        value: line,\r\n      };\r\n    }\r\n  };\r\n  find = (line) => {\r\n    let p = this.items[line];\r\n    if (p) {\r\n      return p.parent === null ? p : this.find(p.parent.value);\r\n    }\r\n    throw new Error(\"Nisu povezani\");\r\n  };\r\n  union = (line1, line2) => {\r\n    const first = this.find(line1);\r\n    const second = this.find(line2);\r\n    if (first === null || second === null) {\r\n      throw new Error(\"Nisu povezani\");\r\n    }\r\n    if (first !== second) {\r\n      first.parent = second;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n}\r\n\r\nexport const kruskalSet = new Set();\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Form,\r\n  InputNumber,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Timeline,\r\n  notification,\r\n} from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport styles from \"./KruskalComponent.module.css\";\r\nimport { Stage, Layer, Text, Circle, Line } from \"react-konva\";\r\nimport { kruskalSet } from \"./set\";\r\n\r\nconst minimalEdge = (edges) => {\r\n  let min = null;\r\n  for (const item of edges) {\r\n    min = min ? (item[2] < min[2] ? item : min) : item;\r\n  }\r\n  return min;\r\n};\r\n\r\nconst getMst = (edges, lines) => {\r\n  let finalArr = [];\r\n  let edgesCopy = edges.slice(0);\r\n  let set1 = kruskalSet;\r\n  set1.make(lines);\r\n  while (finalArr.length < lines.length - 1) {\r\n    let min = minimalEdge(edgesCopy);\r\n    if (set1.union(lines[min[0]], lines[min[1]])) {\r\n      finalArr.push(min);\r\n    }\r\n    edgesCopy.splice(edgesCopy.indexOf(min), 1);\r\n  }\r\n  return finalArr;\r\n};\r\n\r\nexport const KruskalComponent = (props) => {\r\n  const [positions, setPositions] = useState([]);\r\n  const [numOfNodes, setNumOfNodes] = useState(5);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [drawLines, setDrawLines] = useState(false);\r\n  const [lines, setLines] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  const calculateDistances = (node) => {\r\n    const { left, top, index } = node;\r\n    let distances = positions\r\n      .map((el) => {\r\n        if (el.index !== index) {\r\n          let elLeft = Math.abs(left - el.left);\r\n          let elTop = Math.abs(top - el.top);\r\n          if (elLeft === 0)\r\n            return { index: el.index, distance: Math.sqrt(Math.pow(elTop, 2)) };\r\n          else if (elTop === 0)\r\n            return {\r\n              index: el.index,\r\n              distance: Math.sqrt(Math.pow(elLeft, 2)),\r\n            };\r\n          else\r\n            return {\r\n              index: el.index,\r\n              distance: Math.sqrt(Math.pow(elTop, 2) + Math.pow(elLeft, 2)),\r\n            };\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .filter((el) => !!el);\r\n    return distances;\r\n  };\r\n\r\n  const generateLine = (first, second) => {\r\n    return (\r\n      <Line\r\n        points={[first.left, first.top, second.left, second.top]}\r\n        stroke=\"red\"\r\n        strokeWidth={4}\r\n        lineCap=\"round\"\r\n        lineJoin=\"round\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const resetFields = () => {\r\n    form.setFieldsValue({ nodes: 5, starting: 1 });\r\n    setPositions([]);\r\n    setNumOfNodes(5);\r\n    setDisabled(false);\r\n    setDrawLines(false);\r\n    setLines([]);\r\n  };\r\n\r\n  const findMst = () => {\r\n    setDisabled(true);\r\n    let distancesSorted = [];\r\n    let nodesIncluded = [];\r\n    let sets = [];\r\n    let path = [];\r\n    let newLines = [];\r\n    setPositions(\r\n      positions.map((el) => {\r\n        el.distances = calculateDistances(el);\r\n        return el;\r\n      })\r\n    );\r\n    positions.forEach((pos) => {\r\n      pos.distances.forEach((dist) => {\r\n        if (!distancesSorted.includes({}))\r\n          distancesSorted.push({\r\n            from: pos.index,\r\n            to: dist.index,\r\n            distance: dist.distance,\r\n          });\r\n      });\r\n    });\r\n    distancesSorted = distancesSorted\r\n      .sort((a, b) => {\r\n        return a.distance - b.distance;\r\n      })\r\n      .filter((el, index) => index % 2 !== 0);\r\n    console.log(distancesSorted, \"distance\");\r\n    let circles = () => {\r\n      let arr = [];\r\n      for (let i = 0; i < numOfNodes; i++) arr.push(i);\r\n      return arr;\r\n    };\r\n    let edges = () => {\r\n      let arr = [];\r\n      distancesSorted.forEach((dist) =>\r\n        arr.push([dist.from, dist.to, dist.distance])\r\n      );\r\n      return arr;\r\n    };\r\n    let kruskalResult = getMst(edges(), circles());\r\n    kruskalResult.forEach((el) => {\r\n      let pos1 = positions.filter((elem) => elem.index === el[0])[0];\r\n      let pos2 = positions.filter((elem) => elem.index === el[1])[0];\r\n      newLines.push(generateLine(pos1, pos2));\r\n    });\r\n    console.log(kruskalResult, \"TREE\");\r\n    console.log(positions, \"pos\");\r\n    console.log(distancesSorted, \"SORTED\");\r\n    console.log(sets, \"SETS\");\r\n    console.log(path, \"PATH\");\r\n    console.log(nodesIncluded, \"nodes\");\r\n    setLines(newLines);\r\n    setDrawLines(true);\r\n    notification.open({\r\n      duration: 0,\r\n      message: \"Redosled\",\r\n      description: (\r\n        <Timeline style={{ marginTop: \"2rem\" }}>\r\n          {kruskalResult.map((el) => (\r\n            <Timeline.Item color=\"red\">{`${el[0]} → ${\r\n              el[1]\r\n            } ; distanca ≈ ${parseInt(el[2])}px`}</Timeline.Item>\r\n          ))}\r\n        </Timeline>\r\n      ),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Divider>Kruskalov Algoritam</Divider>\r\n      <Row justify=\"center\" style={{ width: \"100%\" }}>\r\n        <Col span={16} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Form layout={\"inline\"} size=\"large\" form={form}>\r\n            <Form.Item\r\n              label=\"Unesite broj čvorova\"\r\n              name=\"nodes\"\r\n              initialValue={5}\r\n            >\r\n              <InputNumber\r\n                min={2}\r\n                max={10}\r\n                onChange={(val) => setNumOfNodes(val)}\r\n                disabled={disabled}\r\n              />\r\n            </Form.Item>\r\n            <Button size=\"large\" type=\"primary\" onClick={findMst}>\r\n              Pronađi MST\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={resetFields}\r\n              danger\r\n              icon={<DeleteOutlined />}\r\n              style={{ marginLeft: \"1rem\" }}\r\n            />\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Stage\r\n        width={800}\r\n        height={600}\r\n        onClick={(e) =>\r\n          positions.length < numOfNodes\r\n            ? setPositions([\r\n                ...positions,\r\n                {\r\n                  left: e.evt.offsetX,\r\n                  top: e.evt.offsetY,\r\n                  index: positions.length,\r\n                },\r\n              ])\r\n            : message.warning(\"Ne možete dodavati više čvorova\")\r\n        }\r\n        className={styles.canvasWrapper}\r\n      >\r\n        <Layer>\r\n          {positions.length ? (\r\n            positions.map((el, index) => (\r\n              <>\r\n                <Circle\r\n                  key={index}\r\n                  x={el.left}\r\n                  y={el.top}\r\n                  width={50}\r\n                  height={50}\r\n                  stroke=\"black\"\r\n                  strokeWidth={3}\r\n                />\r\n                <Text\r\n                  fontSize={16}\r\n                  x={el.left - 5}\r\n                  y={el.top + 35}\r\n                  text={el.index}\r\n                />\r\n              </>\r\n            ))\r\n          ) : (\r\n            <Text text=\"Kliknite da biste dodali čvorista\" x={10} y={10} />\r\n          )}\r\n          {lines.length && drawLines ? lines.map((el) => el) : null}\r\n        </Layer>\r\n      </Stage>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Form,\r\n  InputNumber,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Select,\r\n  Timeline,\r\n  notification,\r\n} from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport styles from \"./PrimComponent.module.css\";\r\nimport { Stage, Layer, Text, Circle, Line } from \"react-konva\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport const PrimComponent = (props) => {\r\n  const [positions, setPositions] = useState([]);\r\n  const [numOfNodes, setNumOfNodes] = useState(5);\r\n  const [startingNode, setStartingNode] = useState(1);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [drawLines, setDrawLines] = useState(false);\r\n  const [lines, setLines] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  const calculateDistances = (node) => {\r\n    const { left, top, index } = node;\r\n    let distances = positions\r\n      .map((el) => {\r\n        if (el.index !== index) {\r\n          let elLeft = Math.abs(left - el.left);\r\n          let elTop = Math.abs(top - el.top);\r\n          if (elLeft === 0)\r\n            return { index: el.index, distance: Math.sqrt(Math.pow(elTop, 2)) };\r\n          else if (elTop === 0)\r\n            return {\r\n              index: el.index,\r\n              distance: Math.sqrt(Math.pow(elLeft, 2)),\r\n            };\r\n          else\r\n            return {\r\n              index: el.index,\r\n              distance: Math.sqrt(Math.pow(elTop, 2) + Math.pow(elLeft, 2)),\r\n            };\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .filter((el) => !!el);\r\n    return distances;\r\n  };\r\n\r\n  const generateLine = (first, second) => {\r\n    return (\r\n      <Line\r\n        points={[first.left, first.top, second.left, second.top]}\r\n        stroke=\"red\"\r\n        strokeWidth={4}\r\n        lineCap=\"round\"\r\n        lineJoin=\"round\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const resetFields = () => {\r\n    form.setFieldsValue({ nodes: 5, starting: 1 });\r\n    setPositions([]);\r\n    setNumOfNodes(5);\r\n    setStartingNode(1);\r\n    setDisabled(false);\r\n    setDrawLines(false);\r\n    setLines([]);\r\n  };\r\n\r\n  const findMst = () => {\r\n    setDisabled(true);\r\n    let newArr = [];\r\n    let newLines = [];\r\n    let arrOfShortestDistances = [];\r\n    let path = [];\r\n    while (newArr.length < numOfNodes) {\r\n      if (newArr.length === 0) {\r\n        setPositions(\r\n          positions.map((el) => {\r\n            el.distances = calculateDistances(el);\r\n            return el;\r\n          })\r\n        );\r\n        console.log(positions, \"pos\");\r\n        let startingNodeEl = positions[startingNode];\r\n        let shortestDistance = Math.min(\r\n          ...startingNodeEl.distances.map((el) => el.distance)\r\n        );\r\n        arrOfShortestDistances.push(shortestDistance);\r\n        console.log(arrOfShortestDistances);\r\n        console.log(startingNodeEl, \"staring\", shortestDistance, \"Shortest\");\r\n        let filteredEl = positions.filter(\r\n          (el) =>\r\n            el.index ===\r\n            startingNodeEl.distances.filter(\r\n              (el) => el.distance === shortestDistance\r\n            )[0].index\r\n        )[0];\r\n        console.log(filteredEl, \"filtered\");\r\n        newArr = [startingNodeEl.index, filteredEl.index];\r\n        path.push({\r\n          from: startingNodeEl.index,\r\n          to: filteredEl.index,\r\n          distance: shortestDistance,\r\n        });\r\n        newLines.push(generateLine(startingNodeEl, filteredEl));\r\n      } else {\r\n        console.log(newArr, \"Trenutni clanovi\");\r\n        let positionsLeft = positions\r\n          .map((el) => {\r\n            if (newArr.includes(el.index)) return el;\r\n          })\r\n          .filter((el) => !!el);\r\n        console.log(positionsLeft);\r\n        console.log(arrOfShortestDistances);\r\n        let onlyDistances = [];\r\n        positionsLeft.forEach((pos) => {\r\n          pos.distances.forEach((dist) => {\r\n            if (\r\n              !arrOfShortestDistances.includes(dist.distance) &&\r\n              !newArr.includes(dist.index)\r\n            )\r\n              onlyDistances.push(dist.distance);\r\n          });\r\n        });\r\n        console.log(onlyDistances);\r\n\r\n        let shortestDistance = Math.min(...onlyDistances);\r\n        arrOfShortestDistances.push(shortestDistance);\r\n        positionsLeft.forEach((pos) => {\r\n          let checkIfIncludesDistance = pos.distances.filter(\r\n            (dist) => dist.distance === shortestDistance\r\n          );\r\n          if (checkIfIncludesDistance.length) {\r\n            newArr.push(checkIfIncludesDistance[0].index);\r\n            let pos1 = positions.filter((el) => el.index === pos.index)[0];\r\n            let pos2 = positions.filter(\r\n              (el) => el.index === checkIfIncludesDistance[0].index\r\n            )[0];\r\n            path.push({\r\n              to: pos2.index,\r\n              from: pos1.index,\r\n              distance: shortestDistance,\r\n            });\r\n            newLines.push(generateLine(pos1, pos2));\r\n          }\r\n        });\r\n      }\r\n    }\r\n    setLines(newLines);\r\n    setDrawLines(true);\r\n    console.log(path, \"PATH\");\r\n    notification.open({\r\n      duration: 0,\r\n      message: \"Redosled\",\r\n      description: (\r\n        <Timeline style={{ marginTop: \"2rem\" }}>\r\n          {path.map((el) => (\r\n            <Timeline.Item color=\"red\">{`${el.from} → ${\r\n              el.to\r\n            } ; distanca ≈ ${parseInt(el.distance)}px`}</Timeline.Item>\r\n          ))}\r\n        </Timeline>\r\n      ),\r\n    });\r\n  };\r\n\r\n  const renderOptions = () => {\r\n    let arrOfElems = [];\r\n    let i = 0;\r\n    while (i < numOfNodes) {\r\n      arrOfElems.push(<Option value={i}>{i}</Option>);\r\n      i++;\r\n    }\r\n    return arrOfElems;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Divider>Primov Algoritam</Divider>\r\n      <Row justify=\"center\" style={{ width: \"100%\" }}>\r\n        <Col span={16} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Form layout={\"inline\"} size=\"large\" form={form}>\r\n            <Form.Item\r\n              label=\"Unesite broj čvorova\"\r\n              name=\"nodes\"\r\n              initialValue={5}\r\n            >\r\n              <InputNumber\r\n                min={2}\r\n                max={10}\r\n                onChange={(val) => setNumOfNodes(val)}\r\n                disabled={disabled}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Izaberite pocetni čvor\"\r\n              name=\"starting\"\r\n              initialValue={1}\r\n            >\r\n              <Select\r\n                defaultValue={1}\r\n                style={{ width: 120 }}\r\n                onSelect={(val) => setStartingNode(val)}\r\n                disabled={disabled}\r\n              >\r\n                {renderOptions()}\r\n              </Select>\r\n            </Form.Item>\r\n            <Button size=\"large\" type=\"primary\" onClick={findMst}>\r\n              Pronađi MST\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={resetFields}\r\n              danger\r\n              icon={<DeleteOutlined />}\r\n              style={{ marginLeft: \"1rem\" }}\r\n            />\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Stage\r\n        width={800}\r\n        height={600}\r\n        onClick={(e) =>\r\n          positions.length < numOfNodes\r\n            ? setPositions([\r\n                ...positions,\r\n                {\r\n                  left: e.evt.offsetX,\r\n                  top: e.evt.offsetY,\r\n                  index: positions.length,\r\n                },\r\n              ])\r\n            : message.warning(\"Ne možete dodavati vise čvorova\")\r\n        }\r\n        className={styles.canvasWrapper}\r\n      >\r\n        <Layer>\r\n          {positions.length ? (\r\n            positions.map((el, index) => (\r\n              <>\r\n                <Circle\r\n                  key={index}\r\n                  x={el.left}\r\n                  y={el.top}\r\n                  width={50}\r\n                  height={50}\r\n                  stroke=\"black\"\r\n                  strokeWidth={3}\r\n                />\r\n                <Text\r\n                  fontSize={16}\r\n                  x={el.left - 5}\r\n                  y={el.top + 35}\r\n                  text={el.index}\r\n                />\r\n              </>\r\n            ))\r\n          ) : (\r\n            <Text text=\"Kliknite da biste dodali čvorista\" x={10} y={10} />\r\n          )}\r\n          {lines.length && drawLines ? lines.map((el) => el) : null}\r\n        </Layer>\r\n      </Stage>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport {\r\n  DotChartOutlined,\r\n  RadarChartOutlined,\r\n  CheckCircleOutlined,\r\n  HomeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { KruskalComponent } from \"../components/KruskalComponent\";\r\nimport { PrimComponent } from \"../components/PrimComponent\";\r\nimport { ToDoComponent } from \"../components/ToDoComponent\";\r\n\r\nexport const mainRoutes = [\r\n  {\r\n    title: \"Početna\",\r\n    path: \"/\",\r\n    icon: <HomeOutlined style={{ fontSize: \"1.3rem\" }} />,\r\n    component: () => (\r\n      <div style={{ fontSize: \"2rem\", textAlign: \"center\" }}>\r\n        Seminarski rad\r\n        <p style={{ fontSize: \"1rem\" }}>Primov i Kruskalov algoritam</p>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Primov algoritam\",\r\n    path: \"/primov\",\r\n    icon: <DotChartOutlined style={{ fontSize: \"1.3rem\" }} />,\r\n    component: PrimComponent,\r\n  },\r\n  {\r\n    title: \"Kruskalov Algoritam\",\r\n    path: \"/kruskalov\",\r\n    icon: <RadarChartOutlined style={{ fontSize: \"1.3rem\" }} />,\r\n    component: KruskalComponent,\r\n  },\r\n  // {\r\n  //   title: \"To-Do Lista\",\r\n  //   path: \"/to-do-lista\",\r\n  //   icon: <CheckCircleOutlined style={{ fontSize: \"1.3rem\" }} />,\r\n  //   component: ToDoComponent,\r\n  // },\r\n];\r\n\r\nexport const renderRoutes = () => {\r\n  return mainRoutes.map((route, index) => (\r\n    <Route exact path={route.path} component={route.component} key={index} />\r\n  ));\r\n};\r\n","export default __webpack_public_path__ + \"static/media/ucg-logo.30c0921e.png\";","import React, { useState } from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link, BrowserRouter } from \"react-router-dom\";\r\nimport { mainRoutes, renderRoutes } from \"../routes/routes\";\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport ucgLogo from \"../assets/images/ucg-logo.png\";\r\nimport styles from \"./MainLayout.module.css\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nexport const MainLayout = (props) => {\r\n  const [siderCollapsed, setSiderCollapsed] = useState(false);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Sider\r\n          collapsible\r\n          collapsedWidth=\"0\"\r\n          zeroWidthTriggerStyle={{\r\n            position: \"absolute\",\r\n            top: \"11px\",\r\n            left: \"0\",\r\n            backgroundColor: \"transparent\",\r\n          }}\r\n          style={{ position: \"fixed\", height: \"100vh\" }}\r\n          collapsed={siderCollapsed}\r\n          trigger={null}\r\n        >\r\n          <div className={styles.siderLogoWrapper}>\r\n            <img src={ucgLogo} alt=\"UCG logo\" />\r\n          </div>\r\n          <Menu theme=\"dark\" mode=\"inline\">\r\n            {mainRoutes.map((route, index) => (\r\n              <Menu.Item\r\n                key={index}\r\n                icon={route.icon}\r\n                onClick={() => setSiderCollapsed(true)}\r\n              >\r\n                <Link to={route.path}>{route.title}</Link>\r\n              </Menu.Item>\r\n            ))}\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            className=\"site-layout-sub-header-background\"\r\n            style={{ padding: 0 }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                color: \"white\",\r\n                fontSize: \"1.5rem\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() =>\r\n                siderCollapsed\r\n                  ? setSiderCollapsed(false)\r\n                  : setSiderCollapsed(true)\r\n              }\r\n            >\r\n              {siderCollapsed ? <MenuUnfoldOutlined /> : <MenuUnfoldOutlined />}\r\n            </div>\r\n          </Header>\r\n          <Content style={{ margin: \"24px 16px 0\" }}>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: 24, minHeight: 360 }}\r\n            >\r\n              {renderRoutes()}\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Petar Radinovic 17/20 - SPR Master\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import 'antd/dist/antd.css';\r\nimport './main.css';\r\nimport { MainLayout } from './layout/MainLayout';\r\n\r\nconst App = () => {\r\n  return <MainLayout />;\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}